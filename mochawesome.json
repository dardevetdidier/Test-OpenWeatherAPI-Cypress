{
  "stats": {
    "suites": 3,
    "tests": 9,
    "passes": 9,
    "pending": 0,
    "failures": 0,
    "start": "2022-04-12T07:23:24.583Z",
    "end": "2022-04-12T07:23:41.538Z",
    "duration": 4635,
    "testsRegistered": 9,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "10c266e0-525c-4963-82e9-9d0fc6f20ced",
      "title": "",
      "fullFile": "cypress/integration/WeatherById.spec.js",
      "file": "cypress/integration/WeatherById.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "682e3c6f-e33b-4db8-a4e7-7878fcbdae94",
          "title": "Open Weather API - By ID suite tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should return Status Code 200",
              "fullTitle": "Open Weather API - By ID suite tests Should return Status Code 200",
              "timedOut": null,
              "duration": 467,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "for (let i = 0; i < cities.length; i++) {\n  cy.RequestById(cities[i].id).then(response => {\n    expect(response.status).to.eq(200);\n  });\n}",
              "err": {},
              "uuid": "4b7c2859-08c1-45f7-9b76-26dba82d8e30",
              "parentUUID": "682e3c6f-e33b-4db8-a4e7-7878fcbdae94",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return right id and right city name",
              "fullTitle": "Open Weather API - By ID suite tests Should return right id and right city name",
              "timedOut": null,
              "duration": 355,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "for (let i = 0; i < cities.length; i++) {\n  cy.RequestById(cities[i].id).then(response => {\n    expect(response.body.id).to.eql(cities[i].id);\n    expect(response.body.name).to.eql(formatCityName(i));\n  });\n}",
              "err": {},
              "uuid": "1961934d-5db6-432d-a0a2-6b822f1d4905",
              "parentUUID": "682e3c6f-e33b-4db8-a4e7-7878fcbdae94",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return a valid schema",
              "fullTitle": "Open Weather API - By ID suite tests Should return a valid schema",
              "timedOut": null,
              "duration": 579,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "for (let i = 0; i < cities.length; i++) {\n  cy.RequestById(cities[i].id).then(response => {\n    expect(response.body).have.property(\"coord\").to.be.an(\"object\");\n    expect(response.body).have.property(\"weather\").to.be.an(\"array\");\n    expect(response.body).have.property(\"wind\").to.be.an(\"object\");\n    expect(response.body).have.property(\"clouds\").to.be.an(\"object\");\n    expect(response.body).have.property(\"name\").to.be.a(\"string\");\n    expect(response.body).have.property(\"id\").to.be.a(\"number\");\n  });\n}",
              "err": {},
              "uuid": "a4dd3ee1-72cd-44d7-a407-0d2bdf8500d1",
              "parentUUID": "682e3c6f-e33b-4db8-a4e7-7878fcbdae94",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4b7c2859-08c1-45f7-9b76-26dba82d8e30",
            "1961934d-5db6-432d-a0a2-6b822f1d4905",
            "a4dd3ee1-72cd-44d7-a407-0d2bdf8500d1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1401,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "085de33b-2d1f-4b09-984c-65a9faa84318",
      "title": "",
      "fullFile": "cypress/integration/WeatherByLatitudeLongitude.spec.js",
      "file": "cypress/integration/WeatherByLatitudeLongitude.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "819d3492-0bec-4521-bf50-05078c8fca76",
          "title": "Open Weather API - By Latitude Longitude suite tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should return Status Code 200",
              "fullTitle": "Open Weather API - By Latitude Longitude suite tests Should return Status Code 200",
              "timedOut": null,
              "duration": 449,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "for (let i = 0; i < cities.length; i++) {\n  cy.RequestByLonLat(cities[i].lat, cities[i].lon).then(response => {\n    expect(response.status).to.eq(200);\n  });\n}",
              "err": {},
              "uuid": "4048a691-ac38-41a6-baaf-c45190542bec",
              "parentUUID": "819d3492-0bec-4521-bf50-05078c8fca76",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return right coordonates",
              "fullTitle": "Open Weather API - By Latitude Longitude suite tests Should return right coordonates",
              "timedOut": null,
              "duration": 351,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "for (let i = 0; i < cities.length; i++) {\n  cy.RequestByLonLat(cities[i].lat, cities[i].lon).then(response => {\n    expect(response.body.coord).to.have.property(\"lon\");\n    expect(response.body.coord).to.have.property(\"lat\");\n  });\n}",
              "err": {},
              "uuid": "238aeaeb-e67b-41e7-a6df-7083e0003a7b",
              "parentUUID": "819d3492-0bec-4521-bf50-05078c8fca76",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return a valid schema",
              "fullTitle": "Open Weather API - By Latitude Longitude suite tests Should return a valid schema",
              "timedOut": null,
              "duration": 660,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "for (let i = 0; i < cities.length; i++) {\n  cy.RequestByLonLat(cities[i].lat, cities[i].lon).then(response => {\n    expect(response.body).have.property(\"coord\").to.be.an(\"object\");\n    expect(response.body).have.property(\"weather\").to.be.an(\"array\");\n    expect(response.body).have.property(\"wind\").to.be.an(\"object\");\n    expect(response.body).have.property(\"clouds\").to.be.an(\"object\");\n    expect(response.body).have.property(\"name\").to.be.a(\"string\");\n    expect(response.body.coord).have.property(\"lon\").to.be.a(\"number\");\n    expect(response.body.coord).have.property(\"lat\").to.be.a(\"number\");\n  });\n}",
              "err": {},
              "uuid": "5cb129a3-ae7e-4b0e-9dc1-12abe800ff15",
              "parentUUID": "819d3492-0bec-4521-bf50-05078c8fca76",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4048a691-ac38-41a6-baaf-c45190542bec",
            "238aeaeb-e67b-41e7-a6df-7083e0003a7b",
            "5cb129a3-ae7e-4b0e-9dc1-12abe800ff15"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1460,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8d713632-26b4-4412-aaa4-9ecc36c04c8f",
      "title": "",
      "fullFile": "cypress/integration/WeatherByCityName.spec.js",
      "file": "cypress/integration/WeatherByCityName.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5e6a7110-af76-4a18-89c7-7b269b255588",
          "title": "Open Weather API - By city Name suite tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should return Code 200 with valid city name",
              "fullTitle": "Open Weather API - By city Name suite tests Should return Code 200 with valid city name",
              "timedOut": null,
              "duration": 763,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "for (let i = 0; i < cities.length; i++) {\n  cy.RequestByCityName(cities[i].name).then(response => {\n    expect(response.status).to.eq(200);\n  });\n}",
              "err": {},
              "uuid": "a92460a4-97a7-4c23-9822-9fb3130e8113",
              "parentUUID": "5e6a7110-af76-4a18-89c7-7b269b255588",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return the right city name",
              "fullTitle": "Open Weather API - By city Name suite tests Should return the right city name",
              "timedOut": null,
              "duration": 362,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "for (let i = 0; i < cities.length; i++) {\n  cy.RequestByCityName(cities[i].name).then(response => {\n    expect(response.body.name).to.eql(formatCityName(i));\n  });\n}",
              "err": {},
              "uuid": "0094f3ff-f0f3-42a5-81cb-a6439e5505d1",
              "parentUUID": "5e6a7110-af76-4a18-89c7-7b269b255588",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return a valid schema",
              "fullTitle": "Open Weather API - By city Name suite tests Should return a valid schema",
              "timedOut": null,
              "duration": 649,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "for (let i = 0; i < cities.length; i++) {\n  cy.RequestByCityName(cities[i].name).then(response => {\n    expect(response.body).have.property(\"coord\").to.be.an(\"object\");\n    expect(response.body).have.property(\"weather\").to.be.an(\"array\");\n    expect(response.body).have.property(\"wind\").to.be.an(\"object\");\n    expect(response.body).have.property(\"clouds\").to.be.an(\"object\");\n    expect(response.body).have.property(\"name\").to.be.a(\"string\");\n  });\n}",
              "err": {},
              "uuid": "d382ea80-9384-4bf4-8057-ab9af7fec4c4",
              "parentUUID": "5e6a7110-af76-4a18-89c7-7b269b255588",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a92460a4-97a7-4c23-9822-9fb3130e8113",
            "0094f3ff-f0f3-42a5-81cb-a6439e5505d1",
            "d382ea80-9384-4bf4-8057-ab9af7fec4c4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1774,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}