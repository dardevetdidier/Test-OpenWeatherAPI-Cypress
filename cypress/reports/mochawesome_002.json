{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2022-04-12T09:11:27.048Z",
    "end": "2022-04-12T09:11:29.016Z",
    "duration": 1968,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "581497f3-ee87-4728-924c-cd7ebe5927a2",
      "title": "",
      "fullFile": "cypress/integration/WeatherByLatitudeLongitude.spec.js",
      "file": "cypress/integration/WeatherByLatitudeLongitude.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d753db96-7b58-442c-a978-af631ae3130d",
          "title": "Open Weather API - By Latitude Longitude suite tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should return Status Code 200",
              "fullTitle": "Open Weather API - By Latitude Longitude suite tests Should return Status Code 200",
              "timedOut": null,
              "duration": 771,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "for (let i = 0; i < cities.length; i++) {\n  cy.RequestByLonLat(cities[i].lat, cities[i].lon).then(response => {\n    expect(response.status).to.eq(200);\n  });\n}",
              "err": {},
              "uuid": "9814ecd6-44bc-4d27-9f5f-4ccd5611c84a",
              "parentUUID": "d753db96-7b58-442c-a978-af631ae3130d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return right coordonates",
              "fullTitle": "Open Weather API - By Latitude Longitude suite tests Should return right coordonates",
              "timedOut": null,
              "duration": 416,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "for (let i = 0; i < cities.length; i++) {\n  cy.RequestByLonLat(cities[i].lat, cities[i].lon).then(response => {\n    expect(response.body.coord).to.have.property(\"lon\");\n    expect(response.body.coord).to.have.property(\"lat\");\n  });\n}",
              "err": {},
              "uuid": "c9b39647-0ddf-4be4-9549-e8dd1e5f591d",
              "parentUUID": "d753db96-7b58-442c-a978-af631ae3130d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return a valid schema",
              "fullTitle": "Open Weather API - By Latitude Longitude suite tests Should return a valid schema",
              "timedOut": null,
              "duration": 664,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "for (let i = 0; i < cities.length; i++) {\n  cy.RequestByLonLat(cities[i].lat, cities[i].lon).then(response => {\n    expect(response.body).have.property(\"coord\").to.be.an(\"object\");\n    expect(response.body).have.property(\"weather\").to.be.an(\"array\");\n    expect(response.body).have.property(\"wind\").to.be.an(\"object\");\n    expect(response.body).have.property(\"clouds\").to.be.an(\"object\");\n    expect(response.body).have.property(\"name\").to.be.a(\"string\");\n    expect(response.body.coord).have.property(\"lon\").to.be.a(\"number\");\n    expect(response.body.coord).have.property(\"lat\").to.be.a(\"number\");\n  });\n}",
              "err": {},
              "uuid": "b97bc319-5087-4fd8-9641-4c7dad4f7b83",
              "parentUUID": "d753db96-7b58-442c-a978-af631ae3130d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9814ecd6-44bc-4d27-9f5f-4ccd5611c84a",
            "c9b39647-0ddf-4be4-9549-e8dd1e5f591d",
            "b97bc319-5087-4fd8-9641-4c7dad4f7b83"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1851,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}